--- not autograded ---

Part 1
    blocksize = 20, n = 100: 
        Testing naive transpose: 0.028 milliseconds
        Testing transpose with blocking: 0.055 milliseconds
    blocksize = 20, n = 1000: 
        Testing naive transpose: 1.651 milliseconds
        Testing transpose with blocking: 1.56 milliseconds
    blocksize = 20, n = 2000: 
        Testing naive transpose: 15.142 milliseconds
        Testing transpose with blocking: 5.271 milliseconds
    blocksize = 20, n = 5000: 
        Testing naive transpose: 133.722 milliseconds
        Testing transpose with blocking: 60.858 milliseconds
    blocksize = 20, n = 10000: 
        Testing naive transpose: 683.263 milliseconds
        Testing transpose with blocking: 351.155 milliseconds

    Checkoff Question 1: начиная с n=1000
    Checkoff Question 2: блоки разбивают массив на более мелкие части, следовательно уменьшается длина перехода

Part 2
    blocksize = 50, n = 10000:
        Testing naive transpose: 764.989 milliseconds
        Testing transpose with blocking: 196.091 milliseconds
    blocksize = 100, n = 10000:
        Testing naive transpose: 678.367 milliseconds
        Testing transpose with blocking: 188.052 milliseconds
    blocksize = 500, n = 10000:
        Testing naive transpose: 672.088 milliseconds
        Testing transpose with blocking: 177.308 milliseconds
    blocksize = 1000, n = 10000:
        Testing naive transpose: 680.911 milliseconds
        Testing transpose with blocking: 191.845 milliseconds
    blocksize = 5000, n = 10000:
        Testing naive transpose: 671.178 milliseconds
        Testing transpose with blocking: 664.356 milliseconds

    Checkoff Question 3: при увеличении размера блока производительность transpose_naive можно сказать немного увеличивается, а transpose_blocked сначала увеличивается, а затем уменьшается 
    (Чем ближе размер блока к размеру матрицы - тем бессмысленее это (тогда нет смысла делить на блоки, т.к. это просто трата времени (увеличивается длина перехода))?)
